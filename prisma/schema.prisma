generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String         @id @default(cuid())
  name           String?
  email          String?        @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?

  createdAt      DateTime       @default(now())
  lastLoginAt    DateTime?

  accounts       Account[]
  sessions       Session[]

  createdClients Client[]       @relation("CreatedClients")
  clientAccesses ClientAccess[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? 
  access_token      String? 
  expires_at        Int?    
  token_type        String? 
  scope             String? 
  id_token          String? 
  session_state     String? 

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id])
}

model Client {
  id         String         @id @default(cuid())
  name       String

  creatorId  String
  creator    User           @relation("CreatedClients", fields: [creatorId], references: [id])

  processes  Process[]

  accesses   ClientAccess[]

  @@map("clients")
}

model ClientAccess {
  id        String   @id @default(cuid())

  clientId  String
  userId    String

  canEdit   Boolean  @default(false)
  canDelete Boolean  @default(false)
  canCreate Boolean  @default(false)

  user      User     @relation(fields: [userId], references: [id])
  client    Client   @relation(fields: [clientId], references: [id])

  @@unique([clientId, userId])
}

enum ProcessType {
  file
  folder
}

model Process {
  id          String   @id @default(cuid())
  title       String
  content     String?
  date        DateTime @default(now())

  type        ProcessType @default(folder)

  clientId    String
  client      Client   @relation(fields: [clientId], references: [id])

  parentId    String?
  parent      Process?    @relation("SubProcesses", fields: [parentId], references: [id])
  children    Process[]   @relation("SubProcesses")

  @@map("processes")
}